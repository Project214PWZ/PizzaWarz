<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>io_clear();
caret_flash = 0;
caret_flash_rate = 15;
caret_move = 0;
caret_move_rate = 7;
text = ""; //Current text
caret = 0; //Caret position
fillchar = "`";//Used as filler character in input handling.
filltext = string_repeat(fillchar, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// keyboard shortcuts:
caret_move = max(0, caret_move - 1);
if (keyboard_check(vk_left) != keyboard_check(vk_right)) {
    if (caret_move == 0) {
        if (keyboard_check(vk_left)) {
            if (caret &gt; 0) caret -= 1;
        } else {
            if (caret &lt; string_length(text)) caret += 1;
        }
        caret_move = caret_move_rate;
    }
} else caret_move = 0;
if (keyboard_check_pressed(vk_home)) caret = 0;
if (keyboard_check_pressed(vk_end)) caret = string_length(text);
if (keyboard_check_pressed(vk_delete)) {
    text = string_delete(text, caret + 1, 1);
}


// actual input:
if (keyboard_string != filltext &amp;&amp; keyboard_string != "") {
    var n, l, t;
    t = string_upper(keyboard_string);//Setting the characters to uppercase
    l = string_length(t);
    n = 1;
    // find where actual input starts
    while ((n &lt;= l) &amp;&amp; (string_char_at(t, n) == fillchar)) n += 1;
    c = 11 - n;
    if (c &gt; 0 &amp;&amp; caret &gt; 0) {
        caret -= c;
        text = string_delete(text, caret + 1, c);
    }
    c = l - n + 1;
    if (c &gt; 0) {
        text = string_insert(string_copy(t, n, c), text, caret + 1);
        caret += c;
    }
}
keyboard_string = filltext;
caret = max(0, min(caret, string_length(text)));




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font_add_sprite(sprite_FontSize_9,36,false,1); 
draw_set_font(sprite_FontSize_9);
var i;
var h;
var ptext;
//Setting the score
score = global.intScore;


ptext = string_replace_all(text, '#', 'ï¿½');
draw_text_colour(x, y, (ptext),c_white,c_purple,c_white,c_purple,1);

//Add lines below the input:
i = string_width(string_copy(ptext, 1, caret));
h = string_height('\\');
draw_line(x + i, y, x + i, y + h);
i = string_width(text);
draw_line(x - 3, y + h + 2, x + i + 2, y + h + 2);
draw_line(x - 3, y + h + 4, x + i + 10, y + h + 4);
//Key handling:
if (keyboard_check_pressed(vk_enter)) {
    with (object_Log) {
        for (i = length - 1; i &gt;= 0; i -= 1) text[i + 1] = text[i];
        length = min(maxlength, length + 1);
        text[0] = ptext;
    }
    text = '';
    caret = 0;
    
    global.name =  ptext;
    
    ini_open("scores.ini")
    for (i = 0; i&lt;10; i++)
    {
        //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
        global.score_array[i, 0] = ini_read_string(string(i), "Name", "unknown");
        global.score_array[i, 1] = ini_read_real(string(i), "Score", 0);
    }
    ini_close();
    
     //search for first spot where player's score is greater
    for (i = 0; i&lt;10; i++)
    {
        //if the player's score is greater than the spot in question
        if (score &gt; global.score_array[i, 1])
        {
            //starting at the last element of the array, set each element to the one before it.
            for (j = 9; j&gt;i; j--)
            {
                global.score_array[j, 0] = global.score_array[j-1, 0];
                global.score_array[j, 1] = global.score_array[j-1, 1];
            }
            
            //now set the space to that of this player
            global.score_array[i, 0] = global.name;
            global.score_array[i, 1] = score;
            break;
        }
    }
    
    //now update ini with this new array
    ini_open("scores.ini")
    for (i = 0; i&lt;10; i++)
    {
        ini_write_string(string(i), "Name", global.score_array[i, 0]);
        ini_write_real(string(i), "Score", global.score_array[i, 1]);
    }
    ini_close();//don't forget to close
    
    //go to the room where the high scores table is shown
    room_goto(room_Scores);
}
    
    





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
