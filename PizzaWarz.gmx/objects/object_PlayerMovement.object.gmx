<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>object_Enviroment</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set initial speed for all directions to 0
vspeed = 0;
hspeed = 0;
image_angle = 0;
//Boolean value that determines increase in speed interval
canIncrease = true;
//Boolean value that determines decrease in speed interval
canDecrease = true;
//Boolean value that will allow damage to be taken
canAcceptDamage = true;
audio_play_sound(sound_CarEngine, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//After alarm time has passed player can be damaged again
canAcceptDamage = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//After alarm time has passed player can decrease speed again
canDecrease = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//After alarm time has passed player can increase speed again
canIncrease = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check to see if all deliveries that have been generated have now been delivered 
//Asd well as if the return to HQ script has already run
if(global.intDeliveriesMade == global.intPizzasToDeliver &amp;&amp; global.bolMoreDeliveries = true){
    //Creates the Pick Up deliveries object at the HQ
    instance_create(global.HQDeliveryCoor[0],global.HQDeliveryCoor[1],object_PickUpMoreDeliveries);
    //Sets need more deliveries to false
    //This will prevent this loop from being entered again
    global.bolMoreDeliveries = false;
}



if x&lt;80{x = 80;}
if x&gt;room_width - 80{x = room_width - 80;}
//0 being the top of the room
if y&lt;80{y = 80;}
else if y &gt; room_height - 80{y = room_height - 80;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_PickUpMoreDeliveries">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Determines if the player vehicle is moving
//If it is not then the collision with the Pick Up Marker is successful
//More deliveries are now available
if(vspeed = 0 &amp;&amp; hspeed = 0){
    //Set current deliveries made to 0
    global.intDeliveriesMade = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_DeliveryDestinationMarker">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Determines if the player vehicle is moving
//If it is not then the collision with the Destination Marker is successful
//This will make a delivery
if(vspeed = 0 &amp;&amp; hspeed = 0){
    //play successful sound and display successful message
    instance_create(x,y,object_SuccessfulDeliveryMessage);
    audio_play_sound(sound_SuccessfulDelivery, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_BlockParent">
      <action>
        <libid>1</libid>
        <id>102</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_motion</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision has happened with a block
//First check to see if alarm has finished and player can accept damage
if(canAcceptDamage == true){
    //Now that player can accept damage play crash
    audio_play_sound(sound_CarCrash,10,false);
    //Call script to calculate damage and apply it
    scriptApplyDamage();
    //Change boolean to false and then set alarm so player cannot accept damage
    //until alarm has run
    canAcceptDamage = false;
    alarm[2] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_RandomVehicleMovement">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision has happened with another vehicle
//First check to see if alarm has finished and player can accept damage
if(canAcceptDamage == true){
    //Now that player can accept damage play crash
    audio_play_sound(sound_CarCrash,10,false);
    //Call script to calculate damage and apply it
    scriptApplyDamage();
    //Change boolean to false and then set alarm so player cannot accept damage
    //until alarm has run
    canAcceptDamage = false;
    alarm[2] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If player is moving then change lanes based on direction
if(vspeed != 0 || hspeed != 0){
    //If player is heading North
    if(image_angle == 0){
        //Then change lanes East
        hspeed = +3;
    }
    //If player is heading East
    else if(image_angle == 270){
        //Then change lanes South
        vspeed = +3;
    }
    //If player is heading South
    else if(image_angle == 180){
        //Then change lanes West
        hspeed = -3;
    }
    //If player is heading West
    else if (image_angle == 90){
        //Then change lanes North
        vspeed = -3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If player is moving then change lanes based on direction
if(vspeed != 0 || hspeed != 0){
    //If player is heading North
    if(image_angle == 0){
        //Then change lanes West
        hspeed = -3;
    }
    //If player is heading East
    else if(image_angle == 270){
        //Then change lanes North
        vspeed = -3;
    }
    //If player is heading South
    else if(image_angle == 180){
        //Then change lanes East
        hspeed = +3;
    }
    //If player is heading West
    else if (image_angle == 90){
        //Then change lanes South
        vspeed = +3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Down", "South"
if(image_angle == 180){
    //Keep moving forward to a max of forward 30
    if(vspeed &gt;= 30){
        vspeed = 30;
        global.intPlayerSpeed = vspeed;
    }
    //Increase forward speed by 3
    else if(vspeed &gt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        vspeed += 3;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 4;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Up", "North"
else if(image_angle == 0){
    //Keep reverse speed to a max of reverse 12
    if(vspeed &gt;= 12){
        vspeed = 12;
        global.intPlayerSpeed = vspeed;
    }
    //While in reverse increase reverse by 3
    else if(vspeed &gt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        vspeed += 3;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 6;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Right", "East"
if(image_angle == 270){
    //Keep moving forward to a max of forward 30
    if(hspeed &gt;= 30){
        hspeed = 30;
        global.intPlayerSpeed = hspeed;
    }
    //Increase forward speed by 3
    else if(hspeed &gt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        hspeed += 3;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 4;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Left", "West"
else if(image_angle == 90){
    //Keep reverse speed to a max of reverse 12
    if(hspeed &gt;= 12){
        hspeed = 12;
        global.intPlayerSpeed = hspeed;
    }
    //While in reverse increase reverse by 3
    else if(hspeed &gt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        hspeed += 3;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 6;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Up", "North"
if(image_angle == 0){
    //Keep forward speed to a max of forward 30
    if(vspeed &lt;= -30){
        vspeed = -30;
        global.intPlayerSpeed = vspeed;
    }
    //Increase forward speed by 3
    else if(vspeed &lt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        vspeed -= 3;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 4;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Down", "South"
else if(image_angle == 180){
    //Keep reverse speed to a max of reverse 12
    if(vspeed &lt;= -12){
        vspeed = -12;
        global.intPlayerSpeed = vspeed;
    }
    //While in reverse increase reverse by 3
    else if(vspeed &lt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        vspeed -= 3;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 6;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Left", "West"
if(image_angle == 90){
    //Keep moving forward to a max of forward 30
    if(hspeed &lt;= -30){
        hspeed = -30;
        global.intPlayerSpeed = hspeed;
    }
    //Increase forward speed by 3
    else if(hspeed &lt;= 0 &amp;&amp; canIncrease == true){
        //Add alarm for increase intervals
        hspeed -= 3;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed -=4;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Right", "East"
else if(image_angle == 270){
    //Keep reverse speed to a max of reverse 12
    if(hspeed &lt;= -12){
        hspeed = -12;
        global.intPlayerSpeed = hspeed;
    }
    //While in reverse increase reverse by 3
    else if(hspeed &lt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        hspeed -= 3;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed -= 6;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Down", "South"
if(image_angle == 180){
    //Keep forward speed to a max of forward 30
    if(vspeed &gt;= 30){
        vspeed = 30;
        global.intPlayerSpeed = vspeed;
    }
    //Increase forward speed by 3
    else if(vspeed &gt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        vspeed += 3;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 4;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Left", "West"
else if(image_angle == 90){
    //Alter image for turn
    image_angle = 180;
    //Transfer speed between vectors
    vspeed = hspeed * (-1);
    //Reduce previous vector to 0 speed
    hspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(vspeed &gt;= 12){
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 4; 
        global.intPlayerSpeed = vspeed;
    }
}
//Moving "Right", "East"
else if(image_angle == 270){
    //Alter image for turn
    image_angle = 180;
    //Transfer speed between vectors
    vspeed = hspeed;
    //Reduce previous vector to 0 speed
    hspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(vspeed &gt;= 12){
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 4; 
        global.intPlayerSpeed = vspeed;
    }
}
//Moving "Up", "North"
else if(image_angle == 0){
    //Keep reverse speed to a max of reverse 12
    if(vspeed &gt;= 12){
        vspeed = 12;
        global.intPlayerSpeed = vspeed;
    }
    //While in reverse increase reverse by 3
    else if(vspeed &gt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        vspeed += 3;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 6;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Right", "East"
if(image_angle == 270){
    //Keep forward speed to a max of forward 30
    if(hspeed &gt;= 30){
        hspeed = 30;
        global.intPlayerSpeed = hspeed;
    }
    //Increase forward speed by 3
    else if(hspeed &gt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        hspeed += 3;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 4;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Up", "North"
else if(image_angle == 0){
    //Alter image for turn
    image_angle = 270;
    //Transfer speed between vectors
    hspeed = vspeed * (-1);
    //Reduce previous vector to 0 speed
    vspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(hspeed &gt;= 12){
        audio_play_sound(sound_TireScreech,10,false);
        hspeed -= 4; 
        global.intPlayerSpeed = hspeed;
    }
}
//Moving "Down", "South"
else if(image_angle == 180){
    //Alter image for turn
    image_angle = 270;
    //Transfer speed between vectors
    hspeed = vspeed;
    //Reduce previous vector to 0 speed
    vspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(hspeed &gt;= 12){
        audio_play_sound(sound_TireScreech,10,false);
        hspeed -= 4; 
        global.intPlayerSpeed = hspeed;
    }
}
//Moving "Left", "West"
else if(image_angle == 90){
    //Keep reverse speed to a max of reverse 12
    if(hspeed &gt;= 12){
        hspeed = 12;
        global.intPlayerSpeed = hspeed;
    }
    //While in reverse increase reverse by 3
    else if(hspeed &gt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        hspeed += 3;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 6;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Up", "North"
if(image_angle == 0){
    //Keep forward speed to a max of forward 30
    if(vspeed &lt;= -30){
        vspeed = -30;
        global.intPlayerSpeed = vspeed;
    }
    //Increase forward speed by 3
    else if(vspeed &lt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        vspeed -= 3;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 4;
        global.intPlayerSpeed = vspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Left", "West"
else if(image_angle == 90){
    //Alter image for turn
    image_angle = 0;
    //Transfer speed between vectors
    vspeed = hspeed;
    //Reduce previous vector to 0 speed
    hspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(vspeed &lt;= -12){
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 4; 
        global.intPlayerSpeed = vspeed;
    }
}
//Moving "Right", "East"
else if(image_angle == 270){
    //Alter image for turn
    image_angle = 0;
    //Transfer speed between vectors
    vspeed = hspeed * (-1);
    //Reduce previous vector to 0 speed
    hspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(vspeed &lt;= -12){
        audio_play_sound(sound_TireScreech,10,false);
        vspeed += 4; 
        global.intPlayerSpeed = vspeed;
    }
}
//Moving "Down", "South"
else if(image_angle == 180){
    //Keep reverse speed to a max of reverse 12
    if(vspeed &lt;= -12){
        vspeed = -12;
        global.intPlayerSpeed = vspeed;
    }
    //While in reverse increase reverse by 3
    else if(vspeed &lt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        vspeed -= 3;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        vspeed -= 6;
        global.intPlayerSpeed = vspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving "Left", "West"
if(image_angle == 90){
    //Keep forward speed to a max of forward 30
    if(hspeed &lt;= -30){
        hspeed = -30;
        global.intPlayerSpeed = hspeed;
    }
    //Increase forward speed by 3
    else if(hspeed &lt;= 0 &amp;&amp; canIncrease == true){
        //Alarm for increase intervals
        hspeed -= 3;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
    else if(canIncrease == true){
        //In reverse and heading forward
        //Alarm for increase in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 4;
        global.intPlayerSpeed = hspeed;
        canIncrease = false;
        alarm[0] = 10;
    }
}
//Moving "Up", "North"
else if(image_angle == 0){
    //Alter image for turn
    image_angle = 90;
    //Transfer speed between vectors
    hspeed = vspeed;
    //Reduce previous vector to 0 speed
    vspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(hspeed &lt;= -12){
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 4; 
        global.intPlayerSpeed = hspeed;
    }
}
//Moving "Down", "South"
else if(image_angle == 180){
    //Alter image for turn
    image_angle = 90;
    //Transfer speed between vectors
    hspeed = vspeed * (-1);
    //Reduce previous vector to 0 speed
    vspeed = 0;
    //Speed is of sufficient velocity to drift during turn
    if(hspeed &lt;= -12){
        audio_play_sound(sound_TireScreech,10,false);
        hspeed += 4; 
        global.intPlayerSpeed = hspeed;
    }
}
//Moving "Right", "East"
else if(image_angle == 270){
    //Keep reverse speed to a max of reverse 12
    if(hspeed &lt;= -12){
        hspeed = -12;
        global.intPlayerSpeed = hspeed;
    }
    //While in reverse increase reverse by 3
    else if(hspeed &lt;= 0 &amp;&amp; canDecrease == true){
        //Alarm for increase of reverse speed interval
        hspeed -= 3;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
    //Speed is in forward apply breaks
    else if(canDecrease == true){
        //Alarm for decrease in speed interval
        audio_play_sound(sound_TireScreech,10,false);
        hspeed -= 6;
        global.intPlayerSpeed = hspeed;
        canDecrease = false;
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This will start the timer
global.bolCount = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Depending on image angle stop changing lanes on release
//If heading North or South
if(image_angle == 0 || image_angle == 180){
    //Stop heading East or West
    hspeed = 0;
}
//If heading East or West
else if(image_angle == 270 || image_angle == 90){
    //Stop heading North or South
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Depending on image angle stop changing lanes on release
//If heading North or South
if(image_angle == 0 || image_angle == 180){
    //Stop heading East or West
    hspeed = 0;
}
//If heading East or West
else if(image_angle == 270 || image_angle == 90){
    //Stop heading North or South
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//With the key release if the player vehicle is 
//close to stopping it will
if(vspeed &gt;= -5 &amp;&amp; vspeed &lt;= 5){
    vspeed = 0;
    global.intPlayerSpeed = vspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//With the key release if the player vehicle is 
//close to stopping it will
if(hspeed &gt;= -5 &amp;&amp; hspeed &lt;= 5){
    hspeed = 0;
    global.intPlayerSpeed = hspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//With the key release if the player vehicle is 
//close to stopping it will
if(vspeed &gt;= -5 &amp;&amp; vspeed &lt;= 5){
    vspeed = 0;
    global.intPlayerSpeed = vspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//With the key release if the player vehicle is 
//close to stopping it will
if(hspeed &gt;= -5 &amp;&amp; hspeed &lt;= 5){
    hspeed = 0;
    global.intPlayerSpeed = hspeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
